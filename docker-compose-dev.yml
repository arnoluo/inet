version: "3.9"
services:
  traefik:
    image: traefik:v2.9
    command:
      - --api.insecure=${TRAEFIK_API_INSECURE}
      - --api.dashboard=${TRAEFIK_API_DASHBOARD}
      - --api.debug=${TRAEFIK_API_DEBUG}
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --metrics.prometheus=true
      - --metrics.prometheus.buckets=0.1,0.3,1.2,5.0
      - --metrics.prometheus.addEntryPointsLabels=true
      - --metrics.prometheus.addRoutersLabels=true
      - --metrics.prometheus.addServicesLabels=true
      - --log.level=${TRAEFIK_LOG_LEVEL}
      # Writing Logs to a File, in JSON
      - --log.filePath=/var/log/traefik/traefik.log
      - --log.format=json
      # Configuring Multiple Filters
      - --accesslog.filepath=/var/log/traefik/access.log
      - --accesslog.bufferingsize=100
      - --accesslog.format=json
      - --accesslog.filters.statuscodes=200,300-302
      - --accesslog.filters.retryattempts
      - --accesslog.filters.minduration=100ms
    ports:
      - ${TRAEFIK_HOST_LISTEN}:80
      - 8080:8080
    networks:
      - inet-chan-traefik
    volumes:
      - type: bind
        source: ${HOST_DOCKER_SOCK}
        target: /var/run/docker.sock
        read_only: true
      - ./log/traefik:/var/log/traefik
    mem_limit: ${SVC_TRAEFIK_MEMORY_LIMIT}

  npa:
    image: arnoluo/nginx-php:alpine3.16
    labels:
      - traefik.enable=${TRAEFIK_ENABLE}
      # https://doc.traefik.io/traefik/routing/providers/docker/#traefikdockernetwork
      # networks有多个时需要指定traefik network(取services.networks下通过name配置的名称)，否则会随机选，大概率选错然后 gateway timeout
      - traefik.docker.network=inet-chan-traefik
      ### 使用不同路径，映射到同一容器不同端口
      # path /
      - traefik.http.routers.root.rule=Host(`${TRAEFIK_HOST_NAME}`)
      - traefik.http.routers.root.entrypoints=web
      - traefik.http.routers.root.service=root-svc
      - traefik.http.services.root-svc.loadbalancer.server.port=${TRAEFIK_HOST_PORT}
      # # 以下为使用子域名配置 subdomain test.inet
      # - traefik.http.routers.${TRAEFIK_SUBDOMAIN_TEST_NAME}.rule=Host(`${TRAEFIK_SUBDOMAIN_TEST_NAME}.${TRAEFIK_HOST_NAME}`)
      # - traefik.http.routers.${TRAEFIK_SUBDOMAIN_TEST_NAME}.entrypoints=web
      # - traefik.http.routers.${TRAEFIK_SUBDOMAIN_TEST_NAME}.service=${TRAEFIK_SUBDOMAIN_TEST_NAME}-svc
      # - traefik.http.services.${TRAEFIK_SUBDOMAIN_TEST_NAME}-svc.loadbalancer.server.port=${TRAEFIK_SUBDOMAIN_TEST_PORT}
      # # 以下为使用子路径配置 /doc
      # - traefik.http.routers.${TRAEFIK_SUBPATH_DOC_NAME}.rule=Host(`${TRAEFIK_HOST_NAME}`) && Path(`${TRAEFIK_SUBPATH_DOC_NAME}`)
      # - traefik.http.routers.${TRAEFIK_SUBPATH_DOC_NAME}.entrypoints=web
      # - traefik.http.routers.${TRAEFIK_SUBPATH_DOC_NAME}.service=${TRAEFIK_SUBPATH_DOC_NAME}-svc
      # - traefik.http.services.${TRAEFIK_SUBPATH_DOC_NAME}-svc.loadbalancer.server.port=${TRAEFIK_SUBPATH_DOC_PORT}
      # ## 大部分项目默认使用根路径运行，还需定义中间件，处理uri
      # - traefik.http.routers.${TRAEFIK_SUBPATH_DOC_NAME}.middlewares=${TRAEFIK_SUBPATH_DOC_NAME}-mdl
      # - traefik.http.middlewares.${TRAEFIK_SUBPATH_DOC_NAME}-mdl.stripprefix.prefixes=/${TRAEFIK_SUBPATH_DOC_NAME}

    volumes:
      - ${HOST_SRC_DIR}:/var/www
      - ./conf/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./conf/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./conf/php/php-conf.ini:/usr/local/etc/php/conf.d/php-conf.ini
      - ./conf/php/fpm-www.conf:/usr/local/etc/php-fpm.d/www.conf
      - ./log/npa:/var/log/npa
    networks:
      - inet-chan-traefik
      - inet-chan-data
    depends_on:
      - traefik
    env_file: .env
    environment:
      COMPOSER_ALLOW_SUPERUSER: 1
      COMPOSER_NO_INTERACTION: 1
    mem_limit: ${SVC_NPA_MEMORY_LIMIT}

  # prom prometheus
  prometheus:
    image: prom/prometheus
    labels:
      - traefik.enable=${TRAEFIK_ENABLE}
      - traefik.http.routers.${TRAEFIK_SUBDOMAIN_PROMETHEUS_NAME}.rule=Host(`${TRAEFIK_SUBDOMAIN_PROMETHEUS_NAME}.${TRAEFIK_HOST_NAME}`)
      - traefik.http.routers.${TRAEFIK_SUBDOMAIN_PROMETHEUS_NAME}.service=${TRAEFIK_SUBDOMAIN_PROMETHEUS_NAME}-svc
      - traefik.http.routers.${TRAEFIK_SUBDOMAIN_PROMETHEUS_NAME}.entrypoints=web
      - traefik.http.services.${TRAEFIK_SUBDOMAIN_PROMETHEUS_NAME}-svc.loadbalancer.server.port=${TRAEFIK_SUBDOMAIN_PROMETHEUS_PORT}
      - traefik.docker.network=inet-chan-traefik
    volumes:
      - ./conf/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/prometheus/consoles
      # - --web.external-url=:9090
      # - --web.enable-lifecycle
      # - --storage.tsdb.retention=15d
    # ports:
    #   - 9090:9090
    networks:
      - inet-chan-traefik
      - inet-chan-prom
    depends_on:
      - alertmanager
      - node-exporter
      - traefik

  # prom alertmanager
  alertmanager:
    image: prom/alertmanager
    # expose:
    #   - 9093
    volumes:
      - ./conf/alertmanager:/etc/alertmanager
      - alertmanager_data:/alertmanager
    command:
      - --config.file=/etc/alertmanager/alertmanager.yml
      - --storage.path=/alertmanager
    networks:
      - inet-chan-prom

  node-exporter:
    image: prom/node-exporter
    # expose:
    #   - 9100
    networks:
      - inet-chan-prom

  # prom grafana @link https://github.com/vegasbrianc/docker-traefik-prometheus
  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    environment:
      GF_INSTALL_PLUGINS: grafana-piechart-panel
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: false
      GF_AUTH_ANONYMOUS_ENABLED: ${GF_AUTH_ANONYMOUS_ENABLED}
      GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
      GF_METRICS_ENABLED: true
    volumes:
      - grafana_data:/var/lib/grafana
      - ./conf/grafana/provisioning:/etc/grafana/provisioning
    labels:
      - traefik.enable=${TRAEFIK_ENABLE}
      - traefik.http.routers.${TRAEFIK_SUBDOMAIN_GRAFANA_NAME}.rule=Host(`${TRAEFIK_SUBDOMAIN_GRAFANA_NAME}.${TRAEFIK_HOST_NAME}`)
      - traefik.http.routers.${TRAEFIK_SUBDOMAIN_GRAFANA_NAME}.service=${TRAEFIK_SUBDOMAIN_GRAFANA_NAME}-svc
      - traefik.http.routers.${TRAEFIK_SUBDOMAIN_GRAFANA_NAME}.entrypoints=web
      - traefik.http.services.${TRAEFIK_SUBDOMAIN_GRAFANA_NAME}-svc.loadbalancer.server.port=${TRAEFIK_SUBDOMAIN_GRAFANA_PORT}
      - traefik.docker.network=inet-chan-traefik
    networks:
      - inet-chan-prom
      - inet-chan-traefik

networks:
  inet-chan-traefik:
    name: inet-chan-traefik
  inet-chan-data:
    name: inet-chan-data
  inet-chan-prom:
    name: inet-chan-prom

volumes:
  prometheus_data: {}
  alertmanager_data: {}
  grafana_data: {}